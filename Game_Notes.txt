TODO:
    * Figure out rounding issue with doubles
    * Have rose only appear if there's a quantity...
    * Random events
    * Consider not having flower objects own their quantity - maybe some sort of inventory-like system
    * Change the "Sell" from market for flowers to only be listed in the inventory
    * Maybe handle user input in a better way? Like, a helper function/lib/class? 
    * Consider using std::exceptions for handling invalid input (e.g., std::stoi)
    * Create parameterized constructors for Flower class
    * Better handle user input for Fly Away menu
    * Handle mix alpha-numeric input for player input


    * Add game states to better manage flow of the game??

    * Implement selling functionality

    * Consider streamlining the text file loading by counting number of '|' in a line
      and creating a vector of strings for each column (as opposed to creating a string for each line)

    * Okay, so I'll have to handle selling events, which requires the player to pass their inventory
      
      Okay, so scratch all that. Let's assume that the player has the buy/sell functionalities. Meaning,
      that the Player class handles buying and selling flowers and other game objects. So you'd probably
      have to pass in a Market object to the player class

    * TODO: Okay, so this is probably going to be a real problem. I went through and created a bunch of
      references to flowers through various functions, and I just now realized that when the Market class
      randomizes flower stats, it'll affect the player's inventory.